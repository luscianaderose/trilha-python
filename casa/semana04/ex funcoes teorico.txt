Exercício 1

Analise o código abaixo:

def func(x):
  resultado = 1
  for i in range(1, x + 1):
    resultado *= i
  return resultado

a. Qual o retorno esperado da função para a chamada func(5)? 120

b. Qual o retorno esperado da função para a chamada func(7)? 5040

1*1 = 1

1*2 = 2

2*3 = 6

6*4 = 24

24*5 = 120

120*6 = 720

720*7 = 5040

c. Qual o retorno esperado da função para a chamada func(0)? 1

for i in range(1, 0 + 1)

Não faz o 1 * 1, ele passa sem fazer e usa o resultado = 1  da 2a linha.

d. Explique o que o código faz em termos de lógica. O que acontece em cada iteração do laço for?

A função multiplica o número da iteração pelo valor guardado na variável ‘resultado’.

e. Baseando-se no comportamento da função, qual é o nome mais apropriado que você daria para ela? Justifique sua escolha.

Fatorial.



Exercício 2

Analise o código abaixo:

def func(s):
    for item in s:
        if isinstance(item, str) and item.isupper():
            return True
    return False

a. Qual o retorno esperado da função para a chamada func(['a', 'B', 'c'])?

b. Qual o retorno esperado da função para a chamada func('Python3')?

c. Qual o retorno esperado da função para a chamada func(12345)?

d. Qual o retorno esperado da função para a chamada func('None')?

Exercício 3

Analise o código abaixo:

def func(a, b, c):
    resultado = a
    for _ in range(c):
        resultado = resultado + (resultado * b)
    return resultado

a. Qual o retorno esperado da função para a chamada func(1000, 0.05, 2)?

1100

1200

1102.5

1210.0

b. Explique o que o código faz em termos de lógica.

Como a variável resultado é atualizada em cada iteração do laço?

Qual é o papel dos parâmetros a, b e c no cálculo?

c. A função foi chamada com os valores func(500, 0.1, 3). Qual será o retorno? Explique o cálculo passo a passo.

d. Baseando-se no comportamento da função, qual é o nome mais apropriado que você daria para ela? Justifique sua escolha.

